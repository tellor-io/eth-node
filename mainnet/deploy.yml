apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: geth-mainnet
  labels:
    app: geth-mainnet
spec:
  serviceName: geth-mainnet
  replicas: 1
  selector:
    matchLabels:
      app: geth-mainnet
  template:
    metadata:
      labels:
        app: geth-mainnet
    spec:
      containers:
      - image: ethereum/client-go:latest
        name: geth-mainnet
        args:
        - "--http"
        - "--http.addr=0.0.0.0"
        - "--http.vhosts=*"
        - "--http.api=eth,net,web3,txpool"
        - "--ws"
        - "--ws.addr=0.0.0.0"
        - "--cache=1024"
        volumeMounts:
        - name: data
          mountPath: /root/.ethereum
          subPath: geth-data
        ports:
        - name: mainnet-http
          containerPort: 8545
        - name: mainnet-p2p
          containerPort: 30303
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: geth-m
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: export-mainnet
  labels:
    app: export-mainnet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: export-mainnet
  template:
    metadata:
      labels:
        app: export-mainnet
    spec:
      containers:
      - image: hunterlong/gethexporter:latest
        name: export-mainnet
        env:
          - name: GETH
            value: "http://geth-mainnet.default:8545"
        ports:
        - name: export-mainnet
          containerPort: 9090
---

kind: Service
apiVersion: v1
metadata:
  name: export-mainnet
  labels:
    app: export-mainnet
spec:
  selector:
    app: export-mainnet
  ports:
  - name: export-mainnet
    port: 9090
---
kind: Service
apiVersion: v1
metadata:
  name: geth-mainnet
  labels:
    app: geth-mainnet
spec:
  selector:
    app: geth-mainnet
  ports:
  - name: mainnet-p2p
    port: 30303
    targetPort: mainnet-p2p
  - name: mainnet-http
    port: 8545
    targetPort: mainnet-http
